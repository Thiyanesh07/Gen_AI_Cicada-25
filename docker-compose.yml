version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cicada-postgres
    environment:
      - POSTGRES_USER=cicada_user
      - POSTGRES_PASSWORD=cicada_password
      - POSTGRES_DB=cicada_users
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - cicada-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cicada_user -d cicada_users"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cicada-backend
    ports:
      - "8000:8000"
    environment:
      - USER_DATABASE_URL=postgresql://cicada_user:cicada_password@postgres:5432/cicada_users
      - TRAINING_DATABASE_URL=postgresql://cicada_user:cicada_password@postgres:5432/cicada_training
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.2
      - CORS_ORIGINS=["http://localhost:5173", "http://localhost:3000"]
    volumes:
      - ./backend:/app
      - backend-data:/app/data
    networks:
      - cicada-network
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cicada-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - cicada-network
    depends_on:
      - backend
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: cicada-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - cicada-network
    restart: unless-stopped

volumes:
  postgres-data:
  backend-data:
  ollama-data:

networks:
  cicada-network:
    driver: bridge
